apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: infra
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: "admin"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: infra
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-configmap
  namespace: infra
data:
  servers.json: |
    {
        "Servers": {
            "1": {
                "Name": "processing",
                "Group": "Servers",
                "Port": 5432,
                "Username": "postgres",
                "Host": "postgres-service.infra.svc.cluster.local",
                "SSLMode": "prefer",
                "MaintenanceDB": "postgres"
            }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin4-deployment
  namespace: infra
  labels:
    app: pgadmin4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin4
  template:
    metadata:
      labels:
        app: pgadmin4
    spec:
      containers:
        - name: pgadmin4
          image: dpage/pgadmin4
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: "nicolas.viaud84@gmail.com"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "admin"
            - name: PGADMIN_CONFIG_X_FRAME_OPTIONS
              value: '""'
          volumeMounts:
            - name: pgadmin-servers-file
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
      volumes:
        - name: pgadmin-servers-file
          configMap:
            name: pgadmin-configmap
          livenessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin4-service
  namespace: infra
spec:
  selector:
    app: pgadmin4
  ports:
    - port: 5431
      targetPort: 80
